

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.URLDecoder;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONArray;
import org.json.JSONObject;

/**
 * Servlet implementation class calCost
 */
public class calCost extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		try{
			String path = this.getClass().getClassLoader().getResource("").getPath();
			String fullPath = URLDecoder.decode(path, "UTF-8");
			String pathArr[] = fullPath.split("/WEB-INF/classes/");
			System.out.println(fullPath);
			System.out.println(pathArr[0]);
			fullPath = pathArr[0];
			System.out.println(fullPath);
			
			FileInputStream fstream = new FileInputStream(fullPath+"/promotion1.log");
			BufferedReader bRead = new BufferedReader(new InputStreamReader(fstream));
			
			List<List<String>> colLog = new ArrayList<List<String>>();
			
			String strLine;
			String [] arr;
			
			while((strLine = bRead.readLine()) != null){
				arr = strLine.split("\\|");
				List<String> log = Arrays.asList(arr);
				colLog.add(log);
			}
			fstream.close();
			
			JSONObject obj = new JSONObject();
	 
			for(int i=0; i<colLog.size(); i++){
				String dateS = colLog.get(i).get(0);
				String[] date = dateS.split("\\/");
				String timeSs = colLog.get(i).get(1);
				String[] startTime = timeSs.split("\\:");
				String timeEs = colLog.get(i).get(2);
				String[] endTime = timeEs.split("\\:");
				String number = colLog.get(i).get(3);
				int price = 0;
				
				SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
				
				Calendar callStart = Calendar.getInstance();
				callStart.clear();
				
				callStart.set(Calendar.YEAR, Integer.parseInt(date[2]));
				callStart.set(Calendar.MONTH, Integer.parseInt(date[1]));
				callStart.set(Calendar.DATE, Integer.parseInt(date[0]));
				callStart.set(Calendar.HOUR_OF_DAY, Integer.parseInt(startTime[0]));
				callStart.set(Calendar.MINUTE, Integer.parseInt(startTime[1]));
				callStart.set(Calendar.SECOND, Integer.parseInt(startTime[2]));
				
				
				Calendar callEnd = Calendar.getInstance();
				callEnd.clear();
				
				callEnd.set(Calendar.YEAR, Integer.parseInt(date[2]));
				callEnd.set(Calendar.MONTH, Integer.parseInt(date[1]));
				callEnd.set(Calendar.DATE, Integer.parseInt(date[0]));
				callEnd.set(Calendar.HOUR_OF_DAY, Integer.parseInt(endTime[0]));
				callEnd.set(Calendar.MINUTE, Integer.parseInt(endTime[1]));
				callEnd.set(Calendar.SECOND, Integer.parseInt(endTime[2]));
				
				String dateStart = formatter.format(callStart.getTime());
				String dateStop  = formatter.format(callEnd.getTime());
			
				SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
				Date date1 = format.parse(dateStart);
				Date date2 = format.parse(dateStop);
				
				long diff = date2.getTime() - date1.getTime();
				long diffSec = diff / 1000;
				long min = diffSec / 60;
				long sec = diffSec % 60;
				
				if(min<=0 && sec>0){
					//ที่บวก 3 เพราะ ถ้าโทรไม่ถึง 1 นาที แต่ถ้า sec มากกว่า 0 ตีเป็น 1 นาที จึงคิดเงินเลย
					price += 3;
				}else if(min>0 && sec == 0){
					//ที่ min - 1 เพราะลบนาทีแรกออก
					//ที่บวก 3 เพราะนาที่แรกคิด 3 บาท
					price += (min-1)+3;
				}else if(min>0 && sec>0){
					//ที่ไม่ลบนาทีแรกออก เพราะถ้า sec มากกว่า 0 จึงตีเป็น 1 นาที 1 บาทได้เลย
					//เพราะถ้า sec มากกว่า 0 ให้ตีเป็น 1 บาทได้เลย
					//ที่บวก 3 เพราะนาที่แรกคิด 3 บาท
					price += min+3;
				}
				
				JSONArray priceList = new JSONArray();
				priceList.put("Number: "+number);
				priceList.put("Start: "+timeSs);
				priceList.put("End: "+timeEs);
				priceList.put("price: "+price);
				obj.put(String.valueOf(i), priceList);
				System.out.println(min + " minutes "+sec+ " seconds "+price+" price");
				
				System.out.println("Date Start : "+dateStart+" Date Stop : "+dateStop);
			}
			
			try (FileWriter file = new FileWriter(fullPath+"/showPrice.json")) {
				file.write(obj.toString());
				System.out.println("Successfully Copied JSON Object to File...");
				System.out.println("\nJSON Object: " + obj);
			}
			System.out.println(new File(".").getCanonicalPath()+"/showPrice.json");
			try (FileWriter file = new FileWriter(new File(".").getCanonicalPath()+"/showPrice.json")) {
				file.write(obj.toString());
			}
			
			request.setAttribute("pathJson", fullPath+"/showPrice.json");
		}catch(Exception e){
			System.err.println("Error : "+e.getMessage());
		}
		
		RequestDispatcher view = getServletContext().getRequestDispatcher("/showCost.jsp"); 
		view.forward(request,response); 
		//response.sendRedirect("showCost.jsp");
	}
}
